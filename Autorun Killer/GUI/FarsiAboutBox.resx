<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAECAIIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwBNT1TUU1i+RNQu1RbiRVVZmAA3HgDNQrq2pDrqF2eMf69/8apa
        07L4g1HB/wCXqT/0I1VW4I6814dWVTndm9z5yvOqqkrSe76m2usXvGb674GP+Ph/8acdSvmHy6jeD/t4
        f/GshZlNShvQ1g51P5n95zurW/nf3styalqyHdHql4p56zMwI6dCf5YPoQa6TQfGWmgxweILWaFkQxLd
        Q3UzRsGzksu7IPzH5uccYIwMcmH7GmOgYcVtSxdSD1dzehjq1N6u68z3Sy0zRL22huLV5JoTEVjkS9lZ
        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
        98Cj7Jbf8+8X/fAoopgL9lt/+eEX/fAooooA/9k=
</value>
  </data>
</root>